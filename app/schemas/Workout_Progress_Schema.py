from pydantic import BaseModel, Field
from typing import List, Optional
from datetime import date


class WorkoutProgressRequest(BaseModel):
    start_date: date = Field(..., description="Start date for the workout progress report")
    end_date: date = Field(..., description="End date for the workout progress report")


class WorkoutExerciseSummary(BaseModel):
    exercise_name: str = Field(..., description="Name of the exercise")
    total_sets: int = Field(..., description="Total number of sets performed")
    total_reps: int = Field(..., description="Total number of reps performed")
    average_weight: Optional[float] = Field(None, description="Average weight lifted")
    max_weight: Optional[float] = Field(None, description="Maximum weight lifted")
    min_rest_time_sec: Optional[int] = Field(None, description="Minimum rest time between sets in seconds")
    max_rpe: Optional[float] = Field(None, description="Maximum Rate of Perceived Exertion (RPE)")


class WorkoutProgressResponse(BaseModel):
    user_name: str = Field(..., description="Full name of the user")
    age: int = Field(..., description="Age of the user")
    goal: str = Field(..., description="User's fitness goal")
    start_date: date = Field(..., description="Start date of the report")
    end_date: date = Field(..., description="End date of the report")
    total_workouts_completed: int = Field(..., description="Total number of workout sessions completed")
    exercises_summary: List[WorkoutExerciseSummary] = Field(..., description="Summary of exercises performed")
    overall_performance_score: Optional[float] = Field(None, description="AI-generated performance score")
    ai_generated_summary: str = Field(..., description="Workout progress summary generated by AI")
    personalized_tips: Optional[List[str]] = Field(None, description="AI-generated personalized workout improvement tips")
    